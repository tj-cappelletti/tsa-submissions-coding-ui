@page "/problems"
@using Tsa.Submissions.Coding.Ui.Models
@inject IHttpContextAccessor HttpContextAccessor
<h3>Problems</h3>

@if (!_isLoggedIn)
{
    <p>You must log in first to view the problems</p>

    <a class="nav-link" href="/login">Login</a>
}
else if (_problems == null)
{
    <p>Loading...</p>
}
else if (!_problems.Any())
{
    <p>No problems found.</p>
}
else
{
    <ul>
        @foreach (var problem in _problems)
        {
            <li>
                <a href="/problems/@problem.Id">@problem.Title</a>
            </li>
        }
    </ul>
}

@code {
    private bool _isLoggedIn;
    private List<Problem>? _problems;

    protected override async Task OnInitializedAsync()
    {
        var username = HttpContextAccessor.HttpContext?.Request.Cookies["username"];

        _isLoggedIn = !string.IsNullOrWhiteSpace(username);

        try
        {
            // Replace "api/problems" with your actual API endpoint
            _problems = await HttpClient!.GetFromJsonAsync<List<Problem>>("api/problems");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching problems: {ex.Message}");
        }
    }

    [Inject]
    private HttpClient? HttpClient { get; set; }
}
